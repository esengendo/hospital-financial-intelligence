[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hospital-financial-analysis"
version = "1.0.0"
description = "AI-Powered Hospital Financial Distress Prediction System"
authors = [
    {name = "Hospital Financial Intelligence", email = "admin@hospital-ai.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"

# Core dependencies for deployment (lightweight)
dependencies = [
    # Data processing
    "pandas>=2.0.0",
    "numpy<2.0.0",  # Compatibility requirement
    "pyarrow>=10.0.0",
    
    # Machine learning (lightweight)
    "scikit-learn>=1.3.0",
    "xgboost>=1.7.0",
    
    # Visualization
    "plotly>=5.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    
    # API and web
    "requests>=2.28.0",
    "aiohttp>=3.8.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    
    # Configuration and environment
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    
    # Report generation
    "jinja2>=3.1.0",
    "markdown>=3.4.0",
    
    # Multi-format parsing
    "beautifulsoup4>=4.11.0",
    "pdfplumber>=0.7.0",
    "openpyxl>=3.1.0",
    
    # Utilities
    "tqdm>=4.64.0",
    "pathlib2>=2.3.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Production deployment
production = [
    "gunicorn>=20.1.0",
    "psycopg2-binary>=2.9.0",  # PostgreSQL support
    "redis>=4.5.0",            # Caching
    "celery>=5.2.0",           # Background tasks
]

# Enhanced analysis (optional heavy dependencies)
enhanced = [
    "shap>=0.41.0",
    "lime>=0.2.0",
    "mlflow>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/hospital-ai/financial-analysis"
Repository = "https://github.com/hospital-ai/financial-analysis.git"
Documentation = "https://hospital-ai.github.io/financial-analysis/"

[project.scripts]
hospital-analysis = "groq_hospital_analysis:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "groq_hospital_analysis.py"]

# Black formatting
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "groq_hospital_analysis"]

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

# mypy type checking
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "sklearn.*",
    "xgboost.*",
    "plotly.*",
    "requests.*",
]
ignore_missing_imports = true

# Deployment configuration
[tool.deployment]
# Supported platforms
platforms = [
    "railway.app",
    "render.com", 
    "fly.io",
    "vercel.com",
    "heroku.com"
]

# Environment variables required
required_env = [
    "GROQ_API_KEY"
]

# Optional environment variables
optional_env = [
    "HF_API_KEY",
    "TOGETHER_API_KEY", 
    "OPENAI_API_KEY"
]

# Docker configuration
[tool.deployment.docker]
base_image = "python:3.11-slim"
port = 8000
health_check = "/health"

# Estimated deployment size: ~100MB (vs 3.4GB with local models)
# Cost: ~$0.0005 per hospital analysis
# Speed: 2-3 seconds per analysis
# Scalability: Unlimited with API providers 